import{findAll}from"../api.db.min.js";import{Album}from"../../../models/models.min.js";import{createWhereClauseObject,getAttributesConstantsBy,getIncludeConstantsBy}from"../api.db.min.js";const getAllAlbumsInfoBy=async(e="",s="")=>{if("authorId"===s){let t=await findAll(Album,getAttributesConstantsBy("album",s),!0,!0,getIncludeConstantsBy("album",s),createWhereClauseObject("album","albumId",e,s));t.map((t,e,s)=>{delete t.song,delete t.genre})}else(c=await findAll(Album,getAttributesConstantsBy("album"),!0,!0,getIncludeConstantsBy("album"))).map((t,e,s)=>delete t.song);return c};import{Author}from"../../../models/models.min.js";const getAllAuthorsInfoBy=async(t=0,e="")=>{if(""===e)return await findAll(Author,getAttributesConstantsBy("author"),!0,!0)};import{Selection}from"../../../models/models.min.js";const getAllSelectionsInfo=async(t=0,e="")=>{if(""===e)return await findAll(Selection,getAttributesConstantsBy("selection"),!0,!0)};import{Song}from"../../../models/models.min.js";import{createSqlStringBy}from"../api.db.min.js";import {sequelize} from"../../../main.min.js";const getAllSongsInfoBy=async(s="",o="")=>{switch(o){case"":var l=await findAll(Song,getAttributesConstantsBy("song"),!0,!0,getIncludeConstantsBy("song"));return l.map((t,e,s)=>{delete t.album,delete t.author}),l;case"selectionId":let[t,e]=await seq.query(createSqlStringBy("song",s,o));return t;case"search":return[t,e]=await seq.query(createSqlStringBy("song",s,o)),t;default:l=await findAll(Song,getAttributesConstantsBy("song",o),!0,!0,getIncludeConstantsBy("song",o),createWhereClauseObject("song","songId",s,o));return l.map((t,e,s)=>{delete t.album,delete t.author}),l}};export{getAllAlbumsInfoBy,getAllAuthorsInfoBy,getAllSongsInfoBy,getAllSelectionsInfo};
