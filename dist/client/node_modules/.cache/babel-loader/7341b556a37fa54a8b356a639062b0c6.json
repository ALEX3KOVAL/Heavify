{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport \"@fontsource/montserrat\";\nimport \"@fontsource/alkalami\";\nimport Provider from \"@/context/Provider.vue\";\nimport TheLoader from \"@/components/TheLoader.vue\";\nexport default {\n  name: 'App',\n  components: {\n    Provider,\n    TheLoader\n  },\n\n  async created() {\n    const layoutName = this.$route.meta.layout || \"DefaultPageLayout.vue\";\n    import(`@/layouts/page/${layoutName}`).then(response => {\n      this.isLoaded = true;\n      this.layout = response;\n    });\n  },\n\n  computed: {\n    async setLayout() {//@ts-ignore\n    }\n\n  },\n  data: () => ({\n    isLoaded: false,\n    layout: \"\"\n  })\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AAEA;EACAA,WADA;EAEAC;IACAC,QADA;IAEAC;EAFA,CAFA;;EAMA;IACA;IACA;MACA;MACA;IACA,CAHA;EAIA,CAZA;;EAaAC;IACA,mBACA;IAEA;;EAJA,CAbA;EAmBAC;IACAC,eADA;IAEAC;EAFA;AAnBA","names":["name","components","Provider","TheLoader","computed","data","isLoaded","layout"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\r\n  <v-app>\r\n    <the-loader\r\n      v-if=\"!isLoaded\"\r\n    />\r\n    <provider>\r\n      <transition\r\n        name=\"fade\"\r\n        appear\r\n        mode=\"out-in\"\r\n      >\r\n        <component\r\n          v-if=\"layout !== ''\"\r\n          :is=\"layout\"\r\n        />\r\n      </transition>\r\n    </provider>\r\n  </v-app>\r\n</template>\r\n\r\n<script>\r\nimport \"@fontsource/montserrat\";\r\nimport \"@fontsource/alkalami\"\r\nimport Provider from \"@/context/Provider.vue\";\r\nimport TheLoader from \"@/components/TheLoader.vue\";\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    Provider,\r\n    TheLoader\r\n  },\r\n  async created() {\r\n    const layoutName = this.$route.meta.layout || \"DefaultPageLayout.vue\";\r\n    import(`@/layouts/page/${layoutName}`).then((response) => {\r\n      this.isLoaded = true;\r\n      this.layout = response;\r\n    });\r\n  },\r\n  computed: {\r\n    async setLayout() {\r\n      //@ts-ignore\r\n\r\n    },\r\n  },\r\n  data: () => ({\r\n    isLoaded: false,\r\n    layout: \"\"\r\n  }),\r\n};\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}