{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CarouselsList from \"@/components/carousels/CarouselsList.vue\";\nexport default {\n  name: \"TheContent\",\n  components: {\n    CarouselsList\n  },\n  data: () => ({\n    presentationCarouselDrawer: true\n  }),\n  props: {\n    headerHeight: {\n      type: Number,\n      required: true\n    },\n    pageName: {\n      type: String,\n      required: true\n    }\n  },\n  computed: {\n    pageHeight() {\n      return this.$vuetify.breakpoint.height;\n    }\n\n  },\n  methods: {\n    smoothScroll(eID) {\n      var startY = 0;\n      var stopY = 400;\n      var distance = stopY > startY ? stopY - startY : startY - stopY;\n\n      if (distance < 100) {\n        scrollTo(0, stopY);\n        return;\n      }\n\n      var speed = Math.round(distance / 100);\n      if (speed >= 20) speed = 20;\n      var step = Math.round(distance / 25);\n      var leapY = stopY > startY ? startY + step : startY - step;\n      var timer = 0;\n\n      if (stopY > startY) {\n        for (var i = startY; i < stopY; i += step) {\n          setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\n          leapY += step;\n          if (leapY > stopY) leapY = stopY;\n          timer++;\n        }\n\n        return;\n      }\n\n      for (var i = startY; i > stopY; i -= step) {\n        setTimeout(\"window.scrollTo(0, \" + leapY + \")\", timer * speed);\n        leapY -= step;\n        if (leapY < stopY) leapY = stopY;\n        timer++;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;AAiBA;AAEA;EACAA,kBADA;EAEAC;IACAC;EADA,CAFA;EAKAC;IACAC;EADA,EALA;EAQAC;IACAC;MACAC,YADA;MAEAC;IAFA,CADA;IAKAC;MACAF,YADA;MAEAC;IAFA;EALA,CARA;EAkBAE;IACAC;MACA;IACA;;EAHA,CAlBA;EAuBAC;IACAC;MACA;MACA;MACA;;MACA;QACAC;QAAA;MACA;;MACA;MACA;MACA;MACA;MACA;;MACA;QACA;UACAC;UACAC;UAAA;UAAAC;QACA;;QAAA;MACA;;MACA;QACAF;QACAC;QAAA;QAAAC;MACA;IACA;;EAvBA;AAvBA","names":["name","components","CarouselsList","data","presentationCarouselDrawer","props","headerHeight","type","required","pageName","computed","pageHeight","methods","smoothScroll","scrollTo","setTimeout","leapY","timer"],"sourceRoot":"src/components/content","sources":["TheContent.vue"],"sourcesContent":["<template>\r\n  <v-sheet\r\n      color=\"background\"\r\n      id=\"scrolling-techniques-2\"\r\n      class=\"overflow-y-auto overflow-x-hidden\"\r\n      :height=\"pageHeight\"\r\n      width=\"100%\"\r\n  >\r\n    <div class=\"d-flex justify-center\" :style=\"`background: #601a8f;color: white;width: 100%;height: ${1500}px;` \">\r\n      <CarouselsList\r\n          :page-name=\"this.pageName\"\r\n      />\r\n    </div>\r\n  </v-sheet>\r\n</template>\r\n\r\n<script>\r\nimport CarouselsList from \"@/components/carousels/CarouselsList.vue\";\r\n\r\nexport default {\r\n  name: \"TheContent\",\r\n  components: {\r\n    CarouselsList,\r\n  },\r\n  data: () => ({\r\n    presentationCarouselDrawer: true,\r\n  }),\r\n  props: {\r\n    headerHeight: {\r\n      type: Number,\r\n      required: true\r\n    },\r\n    pageName: {\r\n      type: String,\r\n      required: true\r\n    },\r\n  },\r\n  computed: {\r\n    pageHeight() {\r\n      return this.$vuetify.breakpoint.height\r\n    }\r\n  },\r\n  methods: {\r\n    smoothScroll(eID) {\r\n      var startY = 0\r\n      var stopY = 400;\r\n      var distance = stopY > startY ? stopY - startY : startY - stopY;\r\n      if (distance < 100) {\r\n        scrollTo(0, stopY); return;\r\n      }\r\n      var speed = Math.round(distance / 100);\r\n      if (speed >= 20) speed = 20;\r\n      var step = Math.round(distance / 25);\r\n      var leapY = stopY > startY ? startY + step : startY - step;\r\n      var timer = 0;\r\n      if (stopY > startY) {\r\n        for ( var i=startY; i<stopY; i+=step ) {\r\n          setTimeout(\"window.scrollTo(0, \"+leapY+\")\", timer * speed);\r\n          leapY += step; if (leapY > stopY) leapY = stopY; timer++;\r\n        } return;\r\n      }\r\n      for ( var i=startY; i>stopY; i-=step ) {\r\n        setTimeout(\"window.scrollTo(0, \"+leapY+\")\", timer * speed);\r\n        leapY -= step; if (leapY < stopY) leapY = stopY; timer++;\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]},"metadata":{},"sourceType":"module"}