{"ast":null,"code":"import TheAuthorizationButtonMenu from \"@/components/authrozationButtonMenu/TheAuthorizationButtonMenu.vue\";\nimport TheHeadingButton from \"@/components/heading/TheHeadingButton.vue\";\n/********************************************************\r\n\r\n    -  АДАПТИРОВАТЬ ПОД РАЗНЫЕ РАЗМЕРЫ ОКНА МЕНЮ АВТОРИЗАЦИИ\r\n    -  Создать компонент кнопки регистрации/логина (один компонент, ему передаётся имя кнопки в props,\r\n в дочернем компоненте есть метод, который в зависимости от имени кнопки переходит на определённую страницу (такое можно сделать через switch))\r\n    -  Создать компонент меню авторизации (регистрация либо логин), который будет отрисовывать в v-for кнопки\r\n (используя prop \"is\" можно будет указать название компонента кнопки и отрисовать), здесь же указывается что делать при событии @click на кнопку\r\n\r\n\r\n ********************************************************/\n\nexport default {\n  components: {\n    TheHeadingButton,\n    TheAuthorizationButtonMenu\n  },\n  data: () => ({\n    navigationPanelVisible: false,\n    authorizationButtonMenuVisible: false\n  }),\n  computed: {\n    iconsSize() {\n      console.log(this.$vuetify.breakpoint);\n\n      switch (this.$vuetify.breakpoint.name) {\n        case 'xs':\n          return 13;\n\n        case 'sm':\n          return 18;\n\n        case 'md':\n          return 22;\n\n        case 'lg':\n          return 20;\n\n        case 'xl':\n          return 30;\n      }\n    }\n\n  },\n  methods: {\n    initHeight() {\n      let currentWidth = this.$vuetify.breakpoint.width;\n      let currentHeight = this.$vuetify.breakpoint.height;\n      let difference;\n\n      if (currentWidth >= currentHeight) {\n        difference = currentWidth / currentHeight + .7;\n        return currentHeight / difference;\n      } else {\n        difference = currentHeight / currentWidth + 1.5;\n        return currentWidth / difference;\n      }\n    },\n\n    hideAuthorizationButton() {\n      this.authorizationButtonMenuVisible = false;\n    },\n\n    toggleAuthorizationButton() {\n      this.authorizationButtonMenuVisible = !this.authorizationButtonMenuVisible;\n    },\n\n    onMenuButtonClick() {\n      this.navigationPanelVisible = !this.navigationPanelVisible;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAmEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;EACAA;IAAAC;IAAAC;EAAA,CADA;EAEAC;IACAC,6BADA;IAEAC;EAFA,EAFA;EAMAC;IACAC;MACAC;;MACA;QACA;UAAA;;QACA;UAAA;;QACA;UAAA;;QACA;UAAA;;QACA;UAAA;MALA;IAOA;;EAVA,CANA;EAkBAC;IACAC;MACA;MACA;MACA;;MACA;QACAC;QACA;MACA,CAHA,MAIA;QACAA;QACA;MACA;IACA,CAbA;;IAcAC;MACA;IACA,CAhBA;;IAiBAC;MACA;IACA,CAnBA;;IAoBAC;MACA;IACA;;EAtBA;AAlBA","names":["components","TheHeadingButton","TheAuthorizationButtonMenu","data","navigationPanelVisible","authorizationButtonMenuVisible","computed","iconsSize","console","methods","initHeight","difference","hideAuthorizationButton","toggleAuthorizationButton","onMenuButtonClick"],"sourceRoot":"src/components/heading","sources":["TheHeading.vue"],"sourcesContent":["<template>\r\n  <header>\r\n    <v-app-bar\r\n        fixed\r\n        dark\r\n        dense\r\n        style=\"background: linear-gradient(to right, rgba(44, 4, 106), rgb(196,26,143))\"\r\n        shrink-on-scroll\r\n        :height=\"`${initHeight()}px`\"\r\n        src='../../../../../assets/images/header.png'\r\n        scroll-target=\"#scrolling-techniques-2\"\r\n        fade-img-on-scroll\r\n        app\r\n    >\r\n      <v-row class=\"d-flex justify-center mt-2\">\r\n      <the-heading-button\r\n        :icons-size=\"iconsSize\"\r\n        :icon-name=\"`mdi-menu`\"\r\n        class=\"ml-4\"\r\n        @onButtonClick=\"onMenuButtonClick\"\r\n        @menuButtonWasClicked=\"onMenuButtonClick\"\r\n      />\r\n      <v-toolbar-title class=\"header__title\">\r\n        Heavify\r\n      </v-toolbar-title>\r\n      <v-spacer></v-spacer>\r\n      <the-authorization-button-menu v-if=\"authorizationButtonMenuVisible\" :icons-size=\"iconsSize\"/>\r\n      <the-heading-button\r\n          class=\"mr-4\"\r\n          :icons-size=\"iconsSize\"\r\n          :icon-name=\"`mdi-login-variant`\"\r\n          @onButtonClick=\"toggleAuthorizationButton\"\r\n          @authorizationButtonNoNeeded=\"hideAuthorizationButton\"\r\n      />\r\n      </v-row>\r\n    </v-app-bar>\r\n    <v-navigation-drawer\r\n        v-model=\"navigationPanelVisible\"\r\n        absolute\r\n        temporary\r\n        color=\"secondary\"\r\n    >\r\n      <v-list\r\n          nav\r\n          dense\r\n      >\r\n        <v-list-item-group active-class=\"deep-purple--text text--accent-4\">\r\n          <v-list-item>\r\n            <v-list-item-icon>\r\n              <v-icon>mdi-home</v-icon>\r\n            </v-list-item-icon>\r\n            <v-list-item-title>Home</v-list-item-title>\r\n          </v-list-item>\r\n\r\n          <v-list-item>\r\n            <v-list-item-icon>\r\n              <v-icon>mdi-account</v-icon>\r\n            </v-list-item-icon>\r\n            <v-list-item-title>Account</v-list-item-title>\r\n          </v-list-item>\r\n        </v-list-item-group>\r\n      </v-list>\r\n    </v-navigation-drawer>\r\n  </header>\r\n</template>\r\n\r\n<script>\r\nimport TheAuthorizationButtonMenu from \"@/components/authrozationButtonMenu/TheAuthorizationButtonMenu.vue\";\r\nimport TheHeadingButton from \"@/components/heading/TheHeadingButton.vue\";\r\n/********************************************************\r\n\r\n    -  АДАПТИРОВАТЬ ПОД РАЗНЫЕ РАЗМЕРЫ ОКНА МЕНЮ АВТОРИЗАЦИИ\r\n    -  Создать компонент кнопки регистрации/логина (один компонент, ему передаётся имя кнопки в props,\r\n в дочернем компоненте есть метод, который в зависимости от имени кнопки переходит на определённую страницу (такое можно сделать через switch))\r\n    -  Создать компонент меню авторизации (регистрация либо логин), который будет отрисовывать в v-for кнопки\r\n (используя prop \"is\" можно будет указать название компонента кнопки и отрисовать), здесь же указывается что делать при событии @click на кнопку\r\n\r\n\r\n ********************************************************/\r\n\r\nexport default {\r\n  components: {TheHeadingButton, TheAuthorizationButtonMenu},\r\n  data: () => ({\r\n    navigationPanelVisible: false,\r\n    authorizationButtonMenuVisible: false,\r\n  }),\r\n  computed: {\r\n    iconsSize() {\r\n      console.log(this.$vuetify.breakpoint);\r\n      switch (this.$vuetify.breakpoint.name) {\r\n        case 'xs': return 13;\r\n        case 'sm': return 18;\r\n        case 'md': return 22;\r\n        case 'lg': return 20;\r\n        case 'xl': return 30;\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    initHeight() {\r\n      let currentWidth = this.$vuetify.breakpoint.width;\r\n      let currentHeight = this.$vuetify.breakpoint.height;\r\n      let difference;\r\n      if (currentWidth >= currentHeight) {\r\n        difference = (currentWidth / currentHeight + .7);\r\n        return currentHeight / (difference);\r\n      }\r\n      else {\r\n        difference = (currentHeight / currentWidth + 1.5);\r\n        return currentWidth / difference;\r\n      }\r\n    },\r\n    hideAuthorizationButton() {\r\n      this.authorizationButtonMenuVisible = false;\r\n    },\r\n    toggleAuthorizationButton() {\r\n      this.authorizationButtonMenuVisible = !this.authorizationButtonMenuVisible\r\n    },\r\n    onMenuButtonClick() {\r\n      this.navigationPanelVisible = !this.navigationPanelVisible;\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}