{"ast":null,"code":"import velocityMixin from \"@/mixins/velocityMixin\";\nimport getPicturesGroupByNames from \"@/http/api/picture\";\nexport default {\n  name: \"TheIndexViewCarousel\",\n  data: () => ({\n    drawer: true,\n    presentationCarouselSlides: [],\n    page: \"index_page\",\n    component: \"index_carousel\"\n  }),\n\n  created() {\n    this.API_URL = process.env.VUE_APP_API_URL;\n    getPicturesGroupByNames(this.page, this.component).then(data => this.presentationCarouselSlides = data);\n  },\n\n  methods: {\n    toggleDrawer: function () {\n      this.drawer = !this.drawer;\n    }\n  },\n  computed: {\n    appbarHeight: function () {\n      switch (this.$vuetify.breakpoint.name) {\n        case \"xs\":\n          return String(this.$vuetify.breakpoint.width * 0.3473) + \"px\";\n\n        case \"sm\":\n          return String(this.$vuetify.breakpoint.width * 0.4073) + \"px\";\n\n        case \"lg\":\n          return String(this.$vuetify.breakpoint.width * 0.2973) + \"px\";\n\n        default:\n          return String(this.$vuetify.breakpoint.width * 0.3173) + \"px\";\n      }\n    }\n  },\n  mixins: [velocityMixin]\n};","map":{"version":3,"mappings":"AAuCA;AACA;AAEA;EACAA,4BADA;EAEAC;IACAC,YADA;IAEAC,8BAFA;IAGAC,kBAHA;IAIAC;EAJA,EAFA;;EAQAC;IACA;IACAC;EACA,CAXA;;EAYAC;IACAC;MAAA;IAAA;EADA,CAZA;EAeAC;IACAC;MACA;QACA;UACA;;QACA;UACA;;QACA;UACA;;QACA;UACA;MARA;IAUA;EAZA,CAfA;EA6BAC;AA7BA","names":["name","data","drawer","presentationCarouselSlides","page","component","created","getPicturesGroupByNames","methods","toggleDrawer","computed","appbarHeight","mixins"],"sourceRoot":"src/components/carousels","sources":["TheIndexViewCarousel.vue"],"sourcesContent":["<template>\r\n  <v-container class=\"presentation-carousel\">\r\n    <v-btn @click=\"toggleDrawer\" class=\"align-self-center\">\r\n      HHHHH\r\n    </v-btn>\r\n    <transition\r\n      appear\r\n      name=\"slide-fade\"\r\n      v-on:before-enter=\"beforeEnter\"\r\n      v-on:enter=\"enter\"\r\n      v-on:leave=\"leave\"\r\n      css>\r\n      <v-card v-if=\"drawer\"\r\n        class=\"elevation-24 rounded-xl presentation-carousel__wrapper\"\r\n      >\r\n        <v-carousel\r\n          continuous\r\n          cycle\r\n          interval=\"5000\"\r\n          hide-delimiter-background\r\n          delimiter-icon=\"mdi-guitar-pick\"\r\n          show-arrows-on-hover\r\n          class=\"rounded-xl presentation-carousel__slider\"\r\n          :height=\"appbarHeight\"\r\n        >\r\n          <v-carousel-item\r\n            class=\"rounded-xl\"\r\n            v-for=\"(slide, i) in presentationCarouselSlides\"\r\n            :key=\"i\"\r\n            :src=\"`${API_URL}/images/${page}/${component}/${slide}`\"\r\n          >\r\n          </v-carousel-item>\r\n        </v-carousel>\r\n      </v-card>\r\n    </transition>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport velocityMixin from \"@/mixins/velocityMixin\";\r\nimport getPicturesGroupByNames from \"@/http/api/picture\";\r\n\r\nexport default {\r\n  name: \"TheIndexViewCarousel\",\r\n  data: () => ({\r\n    drawer: true,\r\n    presentationCarouselSlides: [],\r\n    page: \"index_page\",\r\n    component: \"index_carousel\",\r\n  }),\r\n  created() {\r\n    this.API_URL = process.env.VUE_APP_API_URL;\r\n    getPicturesGroupByNames(this.page, this.component).then((data) => this.presentationCarouselSlides = data);\r\n  },\r\n  methods: {\r\n    toggleDrawer: function () { this.drawer = !this.drawer },\r\n  },\r\n  computed: {\r\n    appbarHeight: function () {\r\n      switch (this.$vuetify.breakpoint.name) {\r\n        case \"xs\":\r\n          return String(this.$vuetify.breakpoint.width * 0.3473) + \"px\";\r\n        case \"sm\":\r\n          return String(this.$vuetify.breakpoint.width * 0.4073) + \"px\";\r\n        case \"lg\":\r\n          return String(this.$vuetify.breakpoint.width * 0.2973) + \"px\";\r\n        default:\r\n          return String(this.$vuetify.breakpoint.width * 0.3173) + \"px\";\r\n      }\r\n    }\r\n  },\r\n  mixins: [velocityMixin]\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}